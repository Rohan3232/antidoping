{"version":3,"sources":["components/Main.js","components/Navbar.js","components/show.js","components/App.js","components/WADA.js","serviceWorker.js","index.js"],"names":["Main","Component","_this","this","react_default","a","createElement","id","onSubmit","event","preventDefault","playerName","antiDopingPlayerName","value","playerAge","antiDopingPlayerAge","bloodGroup","antiDopingPlayerBloodGroup","drugName","antiDopingDrugName","quantity","window","web3","utils","toWei","antiDopingQuantity","toString","props","createReport","className","type","ref","input","placeholder","required","onClick","location","href","Show","scope","reports","map","report","key","fromWei","doped","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","account","reportCount","loading","bind","assertThisInitialized","loadWeb3","loadBlockchainData","console","log","ethereum","Web3","enable","currentProvider","alert","eth","getAccounts","accounts","setState","net","getId","networkId","networkData","AntiDoping","networks","antiDoping","Contract","abi","address","methods","i","concat","toConsumableArray","_this2","send","from","once","receipt","_this3","react_router_dom","react_router","exact","path","render","components_Main","show","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","src_components_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.19b2c6e1.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { withRouter,Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nclass Main extends Component {\r\n\r\n  render() {\r\n    return (\r\n        <div id=\"content\">\r\n\r\n              <h1>Add Report Values</h1>\r\n        <form onSubmit={(event) => {\r\n          event.preventDefault()\r\n          const playerName = this.antiDopingPlayerName.value\r\n          const playerAge = this.antiDopingPlayerAge.value\r\n          const bloodGroup = this.antiDopingPlayerBloodGroup.value\r\n          const drugName = this.antiDopingDrugName.value\r\n          const quantity = window.web3.utils.toWei(this.antiDopingQuantity.value.toString(), 'Ether')\r\n          this.props.createReport(playerName, playerAge, bloodGroup, drugName, quantity)\r\n         \r\n        }}>\r\n          <div className=\"form-group mr-sm-2\">\r\n            <input\r\n              id=\"antiDopingPlayerName\"\r\n              type=\"text\"\r\n              ref={(input) => { this.antiDopingPlayerName = input }}\r\n              className=\"form-control\"\r\n              placeholder=\"Player Name\"\r\n              required />\r\n          </div>\r\n          <div className=\"form-group mr-sm-2\">\r\n            <input\r\n              id=\"antiDopingPlayerAge\"\r\n              type=\"text\"\r\n              ref={(input) => { this.antiDopingPlayerAge = input }}\r\n              className=\"form-control\"\r\n              placeholder=\"Player Age\"\r\n              required />\r\n          </div>\r\n          <div className=\"form-group mr-sm-2\">\r\n            <input\r\n              id=\"antiDopingPlayerBloodGroup\"\r\n              type=\"text\"\r\n              ref={(input) => { this.antiDopingPlayerBloodGroup = input }}\r\n              className=\"form-control\"\r\n              placeholder=\"Blood Group\"\r\n              required />\r\n          </div>\r\n          <div className=\"form-group mr-sm-2\">\r\n            <input\r\n              id=\"antiDopingDrugName\"\r\n              type=\"text\"\r\n              ref={(input) => { this.antiDopingDrugName = input }}\r\n              className=\"form-control\"\r\n              placeholder=\"Drug Name\"\r\n              required />\r\n          </div>\r\n          <div className=\"form-group mr-sm-2\">\r\n            <input\r\n              id=\"antiDopingQuantity\"\r\n              type=\"text\"\r\n              ref={(input) => { this.antiDopingQuantity = input }}\r\n              className=\"form-control\"\r\n              placeholder=\"Drug quantity\"\r\n              required />\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"btn btn-primary\" >Add Report</button>\r\n               \r\n </form>\r\n\r\n        <p>&nbsp;</p>\r\n    <button className=\"btn btn-primary\" onClick={event =>  window.location.href='/loadReport'}>View Report</button>\r\n          \r\n        </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from 'react';\r\n\r\n\r\nclass Navbar extends Component {\r\n\r\n  \r\n  render() {\r\n    return (\r\n        <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\r\n          <a\r\n            className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n          Blockchain AntiDoping\r\n          </a>\r\n          <ul className = \"navbar-nav px-3\">\r\n            <li className = \"nav-item text-nowrap d-none d-sm-none d-sm-block\">\r\n              <small className=\"text-white\"><span id=\"account\">{this.props.account}</span></small>\r\n            </li>\r\n          </ul> \r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from 'react';\r\nimport Web3 from 'web3'\r\nimport './App.css';\r\nimport AntiDoping from '../abis/AntiDoping.json' \r\nimport Navbar from './Navbar'\r\nimport Main from './Main'\r\n\r\nimport {BrowserRouter, Route} from 'react-router-dom'\r\nclass Show extends Component {\r\n\r\n\r\n  render() {\r\n    return (\r\n\r\n        <div id=\"content\">      \r\n        <h2>Add drug report</h2>\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">#</th>\r\n              <th scope=\"col\">Player Name</th>\r\n              <th scope=\"col\">Player Age</th>\r\n              <th scope=\"col\">Blood Group</th>\r\n              <th scope=\"col\">Drug Name</th>\r\n              <th scope=\"col\">Quatity_ng/ml</th>\r\n              <th scope=\"col\">WADA</th>\r\n              <th scope=\"col\"></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody id=\"antiDopingList\">\r\n            {this.props.reports.map((report,key)=>{\r\n              return (\r\n                <tr key={key}>\r\n                <th scope=\"row\">{report.id.toString()}</th>\r\n                <td>{report.playerName}</td>\r\n                <td>{report.playerAge}</td>\r\n                <td>{report.bloodGroup}</td>\r\n                <td>{report.drugName}</td>\r\n                <td>{window.web3.utils.fromWei(report.quantity.toString(),'Ether')}</td>\r\n                  <td>{report.doped}</td>\r\n\r\n                </tr>\r\n\r\n                )\r\n            })} \r\n          </tbody>\r\n        </table>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Show;\r\n","import React, { Component } from 'react';\nimport Web3 from 'web3'\nimport './App.css';\nimport AntiDoping from '../abis/AntiDoping.json' \nimport Navbar from './Navbar'\nimport Main from './Main'\nimport Show from './show'\nimport {BrowserRouter, Route} from 'react-router-dom'\nimport WADA from './WADA'\nclass App extends Component {\n\n  \n  async componentWillMount(){\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n    console.log(window.web3)\n  }\n\n  async loadWeb3(){\n\n      if (window.ethereum) {\n          window.web3 = new Web3(window.ethereum)\n          await window.ethereum.enable()\n        }\n      else if (window.web3) {\n          window.web3 = new Web3(window.web3.currentProvider)\n        }\n      else {\n          window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n      }\n    }\n  \n  async loadBlockchainData(){\n    const web3 = window.web3\n\n    //load account\n    const accounts =await web3.eth.getAccounts()\n    this.setState({account : accounts[0]}) \n    const networkId = await web3.eth.net.getId()\n    const networkData = AntiDoping.networks[networkId]\n    if(networkData){\n      const antiDoping = web3.eth.Contract (AntiDoping.abi,networkData.address)\n      this.setState({antiDoping})\n      const reportCount = await antiDoping.methods.reportCount().call()\n      this.setState({reportCount})\n      for(var i=1;i<=reportCount;i++){\n        const report = await antiDoping.methods.reports(i).call()\n        this.setState({\n          reports:[...this.state.reports, report]\n        })\n      }\n      this.setState({loading : false})\n      console.log(this.state.reports)\n      }else{\n      window.alert(\"contract is not deployed to network\")\n    }\n   \n  }\ncreateReport(playerName, playerAge, bloodGroup, drugName, quantity){\n    this.setState({loading:true})\n    this.state.antiDoping.methods.createReport(playerName, playerAge, bloodGroup, drugName, quantity).send({from:this.state.account})\n    .once('receipt', (receipt)=>{\n      this.setState({loading:false})\n    })\n  }\n\n  \n  constructor(props) {\n    super(props)\n    this.state = {\n      account:'',\n      reportCount:0,\n      reports:[],\n      loading:true\n    }\n\n    this.createReport = this.createReport.bind(this)\n  }\n\n\n  render() {\n    return (\n\n      <BrowserRouter>\n    <div>\n     \n      \n         <Route exact={true} path='/' render={() => (\n            <div className=\"App\">\n              <Main reports = {this.state.reports}\n                 createReport={this.createReport}\n                 />\n            </div>\n         )}/>\n         <Route exact={true} path='/loadreport' render={() => (\n            <div className=\"App\">\n              <Show reports = {this.state.reports}\n                 createReport={this.createReport}\n                 />\n            </div>\n         )}/>\n         \n    </div>\n\n</BrowserRouter>\n);\n  }\n}\n\nexport default App;\n ","import React, { Component } from 'react';\r\nimport Web3 from 'web3'\r\nimport './App.css';\r\nimport AntiDoping from '../abis/AntiDoping.json' \r\nimport Navbar from './Navbar'\r\nimport Main from './Main'\r\nimport Show from './show'\r\nimport {BrowserRouter, Route} from 'react-router-dom'\r\nclass WADA extends Component {\r\n\r\n  \r\n  async componentWillMount(){\r\n    await this.loadWeb3()\r\n    await this.loadBlockchainData()\r\n    console.log(window.web3)\r\n  }\r\n\r\n  async loadWeb3(){\r\n\r\n      if (window.ethereum) {\r\n          window.web3 = new Web3(window.ethereum)\r\n          await window.ethereum.enable()\r\n        }\r\n      else if (window.web3) {\r\n          window.web3 = new Web3(window.web3.currentProvider)\r\n        }\r\n      else {\r\n          window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\r\n      }\r\n    }\r\n  \r\n  async loadBlockchainData(){\r\n    const web3 = window.web3\r\n\r\n    //load account\r\n    const accounts =await web3.eth.getAccounts()\r\n    this.setState({account : accounts[0]}) \r\n    const networkId = await web3.eth.net.getId()\r\n    const networkData = AntiDoping.networks[networkId]\r\n    if(networkData){\r\n      const antiDoping = web3.eth.Contract (AntiDoping.abi,networkData.address)\r\n      this.setState({antiDoping})\r\n      const reportCount = await antiDoping.methods.reportCount().call()\r\n      this.setState({reportCount})\r\n      for(var i=1;i<=reportCount;i++){\r\n        const report = await antiDoping.methods.reports(i).call()\r\n        this.setState({\r\n          reports:[...this.state.reports, report]\r\n        })\r\n      }\r\n      this.setState({loading : false})\r\n      console.log(this.state.reports)\r\n      }else{\r\n      window.alert(\"contract is not deployed to network\")\r\n    }\r\n   \r\n  }\r\ncreateReport(playerName, playerAge, bloodGroup, drugName, quantity){\r\n    this.setState({loading:true})\r\n    this.state.antiDoping.methods.createReport(playerName, playerAge, bloodGroup, drugName, quantity).send({from:this.state.account})\r\n    .once('receipt', (receipt)=>{\r\n      this.setState({loading:false})\r\n    })\r\n  }\r\n\r\n  checkReport(reportCount){\r\n    this.setState({loading:true})\r\n    this.state.antiDoping.methods.checkReport(reportCount).send({from:this.state.account})\r\n    .once('receipt', (receipt)=>{\r\n      this.setState({loading:false})\r\nwindow.location.replace(\"https://kovan.etherscan.io/tx/\" )\r\n    })\r\n  }\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      account:'',\r\n      reportCount:0,\r\n      reports:[],\r\n      loading:true\r\n    }\r\n\r\n    this.createReport = this.createReport.bind(this)\r\n    this.checkReport =this.checkReport.bind(this)\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n\r\n      <BrowserRouter>\r\n    <div>\r\n     \r\n      \r\n         <Route exact={true} path='/' render={() => (\r\n            <div className=\"App\">\r\n              <Main reports = {this.state.reports}\r\n                 createReport={this.createReport}\r\n                 />\r\n            </div>\r\n         )}/>\r\n         <Route exact={true} path='/loadreport' render={() => (\r\n            <div className=\"App\">\r\n              <Show reports = {this.state.reports}\r\n                 createReport={this.createReport}\r\n                 checkReport={this.checkReport}\r\n                 />\r\n            </div>\r\n         )}/>\r\n         <Route exact={true} path='/WADA' render={() => (\r\n            <div className=\"App\">\r\n              <WADA reports = {this.state.reports}\r\n                 createReport={this.createReport}\r\n                 checkReport={this.checkReport}\r\n                 />\r\n            </div>\r\n         )}/>\r\n        \r\n         \r\n    </div>\r\n\r\n</BrowserRouter>\r\n);\r\n  }\r\n}\r\n\r\nexport default WADA;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\t\n"],"sourceRoot":""}